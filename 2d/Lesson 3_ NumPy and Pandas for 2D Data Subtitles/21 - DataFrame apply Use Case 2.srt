1
00:00:00,520 --> 00:00:03,990
There's also another possible way to
use the apply function for data frames.

2
00:00:05,070 --> 00:00:08,890
Instead of taking in one column and
returning a new column,

3
00:00:08,890 --> 00:00:12,550
the function f could take in one
column and return just a single value.

4
00:00:14,030 --> 00:00:14,890
In this case,

5
00:00:14,890 --> 00:00:18,839
instead of creating a new data frame,
apply will create a new series.

6
00:00:20,010 --> 00:00:23,950
Where each column of the data frame
has been reduced to a single value.

7
00:00:25,050 --> 00:00:28,900
For example, if I wanted to find
the maximum value in each column,

8
00:00:28,900 --> 00:00:32,350
I could call, df.apply(np.max) to

9
00:00:32,350 --> 00:00:36,350
call NumPy's max function on
each column of the data frame.

10
00:00:36,350 --> 00:00:40,750
This would give me the same result, it's
called the built-in function df.max.

11
00:00:40,750 --> 00:00:44,760
So in this case using the built-in
function would be simpler.

12
00:00:44,760 --> 00:00:47,760
But as usual apply can be useful
when there's not a built-in

13
00:00:47,760 --> 00:00:49,800
function that does what you want.

14
00:00:49,800 --> 00:00:54,500
For example what if you wanted to find
the second largest value in each column?

15
00:00:54,500 --> 00:00:57,710
In that case it would make sense
to use the apply function.

16
00:00:57,710 --> 00:00:59,860
In the next exercise,
I want you to do just that.

