1
00:00:00,360 --> 00:00:02,930
Data frames also support
vectorized operations, and

2
00:00:02,930 --> 00:00:06,350
they work similarly to vectorized
operations for 2D NumPy arrays.

3
00:00:07,400 --> 00:00:11,080
Like pandaSeries, they match up
elements by index and column name,

4
00:00:11,080 --> 00:00:12,110
rather than by position.

5
00:00:12,110 --> 00:00:15,010
On the next screen you'll
get a chance to try out some

6
00:00:15,010 --> 00:00:18,010
different vectorized operations and
see what they do.

7
00:00:18,010 --> 00:00:21,240
There will also be an exercise for
you to get some practice.

8
00:00:21,240 --> 00:00:24,000
The Subway data in its original
format did not include

9
00:00:24,000 --> 00:00:25,320
the hourly entries and exits.

10
00:00:26,500 --> 00:00:30,320
Instead, it had cumulative or
total entries and exits.

11
00:00:30,320 --> 00:00:32,460
So, for example if the total
entries were 10, 40, 60,

12
00:00:32,460 --> 00:00:38,070
65 and 85 for the first five
hours the station was open.

13
00:00:38,070 --> 00:00:40,628
Then the hourly entries for
the first hour would be 10.

14
00:00:40,628 --> 00:00:44,410
Again, assuming that this is
the first hour the station was open.

15
00:00:44,410 --> 00:00:46,700
And the entries for
the next hour would be 30,

16
00:00:46,700 --> 00:00:48,930
since 30 people joined to bring
the total from 10 up to 40.

17
00:00:48,930 --> 00:00:53,510
And the rest of the hourly
values would be 20, 5, and 20.

18
00:00:53,510 --> 00:00:58,150
We converted the total entries and
exits into the hourly entries and

19
00:00:58,150 --> 00:01:01,860
exits that are available in the file
in the downloadable section.

20
00:01:01,860 --> 00:01:05,670
In the following exercise you'll write a
function that takes in a data frame with

21
00:01:05,670 --> 00:01:10,110
cumulative entries in one column and
cumulative exits in a second column.

22
00:01:10,110 --> 00:01:13,640
And then return the data frame
with hourly entries and exits.

23
00:01:13,640 --> 00:01:16,190
You might find the shift
function helpful.

24
00:01:16,190 --> 00:01:19,110
Documentation for it is linked
in the instructor's notes but

25
00:01:19,110 --> 00:01:21,140
I recommend that you just try it out and
see what it does.

